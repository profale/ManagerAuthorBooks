version: '3.4'

networks:
    product_manager-dev:
        driver: bridge 

services:
    managerauthorbooks.api:
        image: ${DOCKER_REGISTRY-}managerauthorbooksapi
        depends_on:
            - db
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "9002:80"
            - "443:443"
        environment:      
            ASPNETCORE_ENVIRONMENT: "Development"
        networks:
            - product_manager-dev
        volumes:
            - ./https/aspnetapp.pfx:/https/aspnetapp.pfx:ro
    db:
        build: 
            context: .
            dockerfile: sqlserver.dockerfile
        ports:
            - "15789:1433"
        env_file: sqlserver.env
        volumes: 
            - sqldata:/var/opt/sqlserver/data
            - sqllog:/var/opt/sqlserver/log
            - sqlbackup:/var/opt/sqlserver/backup
        networks:
            - product_manager-dev

    broker-local:
        image: rabbitmq:3-management-alpine
        environment:
            RABBITMQ_DEFAULT_USER: "testes"
            RABBITMQ_DEFAULT_PASS: "RabbitMQ2019!"
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes:
            - ./cert_rabbitmq:/cert_rabbitmq
        networks:
            - product_manager-dev

    rediscache:
        image: redis
        command: redis-server --requirepass Redis2019!
        ports:
          - "6379:6379"
        networks:
          - product_manager-dev
volumes:
    sqldata:
    sqllog:
    sqlbackup: